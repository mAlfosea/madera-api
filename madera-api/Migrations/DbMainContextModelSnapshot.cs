// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using madera_api.Data;

namespace madera_api.Migrations
{
    [DbContext(typeof(DbMainContext))]
    partial class DbMainContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("CollectionModule", b =>
                {
                    b.Property<int>("CollectionsId")
                        .HasColumnType("int");

                    b.Property<int>("ModulesId")
                        .HasColumnType("int");

                    b.HasKey("CollectionsId", "ModulesId");

                    b.HasIndex("ModulesId");

                    b.ToTable("CollectionModule");

                    b.HasData(
                        new
                        {
                            CollectionsId = 1,
                            ModulesId = 1
                        },
                        new
                        {
                            CollectionsId = 1,
                            ModulesId = 2
                        });
                });

            modelBuilder.Entity("ComponentModule", b =>
                {
                    b.Property<int>("ComponentsId")
                        .HasColumnType("int");

                    b.Property<int>("ModulesId")
                        .HasColumnType("int");

                    b.HasKey("ComponentsId", "ModulesId");

                    b.HasIndex("ModulesId");

                    b.ToTable("ComponentModule");

                    b.HasData(
                        new
                        {
                            ComponentsId = 1,
                            ModulesId = 1
                        },
                        new
                        {
                            ComponentsId = 2,
                            ModulesId = 1
                        },
                        new
                        {
                            ComponentsId = 1,
                            ModulesId = 2
                        });
                });

            modelBuilder.Entity("madera_api.Models.Collection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("Collection");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Printemps"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Eté"
                        });
                });

            modelBuilder.Entity("madera_api.Models.Component", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("Nature")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nature");

                    b.Property<double>("Price")
                        .HasMaxLength(100)
                        .HasColumnType("float")
                        .HasColumnName("price");

                    b.Property<string>("Trait")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("trait");

                    b.Property<string>("Unite")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("unite");

                    b.HasKey("Id");

                    b.ToTable("Component");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Vis",
                            Nature = "Vis",
                            Price = 15.0,
                            Trait = "Fer",
                            Unite = "Kg"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Boulon",
                            Nature = "Boulon",
                            Price = 8.0,
                            Trait = "Fer",
                            Unite = "Kg"
                        });
                });

            modelBuilder.Entity("madera_api.Models.Module", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("Nature")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nature");

                    b.Property<string>("Trait")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("trait");

                    b.Property<string>("Unite")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("unite");

                    b.HasKey("Id");

                    b.ToTable("Module");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Toit en bois d'Erable",
                            Nature = "Toit",
                            Trait = "Bois",
                            Unite = "M²"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Mur en bois d'Erable",
                            Nature = "Mur",
                            Trait = "Bois",
                            Unite = "M²"
                        });
                });

            modelBuilder.Entity("madera_api.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<int?>("CommercialId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("CommercialId");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("madera_api.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Civility")
                        .HasColumnType("int")
                        .HasColumnName("civility");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("last_name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("password");

                    b.Property<string>("Phone")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("phone");

                    b.Property<int>("Role")
                        .HasColumnType("int")
                        .HasColumnName("role");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Civility = 1,
                            Email = "francis@madera.fr",
                            FirstName = "Francis",
                            LastName = "Client",
                            Password = "1234",
                            Phone = "",
                            Role = 1
                        },
                        new
                        {
                            Id = 2,
                            Civility = 1,
                            Email = "roger@madera.fr",
                            FirstName = "Roger",
                            LastName = "Commercial",
                            Password = "1234",
                            Phone = "",
                            Role = 2
                        });
                });

            modelBuilder.Entity("CollectionModule", b =>
                {
                    b.HasOne("madera_api.Models.Collection", null)
                        .WithMany()
                        .HasForeignKey("CollectionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("madera_api.Models.Module", null)
                        .WithMany()
                        .HasForeignKey("ModulesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ComponentModule", b =>
                {
                    b.HasOne("madera_api.Models.Component", null)
                        .WithMany()
                        .HasForeignKey("ComponentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("madera_api.Models.Module", null)
                        .WithMany()
                        .HasForeignKey("ModulesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("madera_api.Models.Project", b =>
                {
                    b.HasOne("madera_api.Models.User", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId");

                    b.HasOne("madera_api.Models.User", "Commercial")
                        .WithMany()
                        .HasForeignKey("CommercialId");

                    b.Navigation("Client");

                    b.Navigation("Commercial");
                });
#pragma warning restore 612, 618
        }
    }
}
